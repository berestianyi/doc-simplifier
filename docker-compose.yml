version: "3.8"

services:
  db:
    image: postgres:17.4-alpine3.21
    restart: always
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    env_file:
      - ./.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d doc_simplifier" ]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7.2-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 30s
      retries: 5

  django-web:
    build: .
    ports:
      - "8000:8000"
    depends_on:
      - db
    volumes:
      - ./src/static:/app/src/static
      - ./src/templates:/app/src/templates
      - ./src/staticfiles:/app/src/staticfiles
      - ./src/media:/app/src/media
    env_file:
      - ./.env

  celery-worker:
    build: .
    command: celery -A config worker --loglevel=info
    depends_on:
      - db
      - redis
      - django-web
    env_file:
      - ./.env
    volumes:
      - ./src:/app/src

  flower:
    image: mher/flower:0.9.7
    command: ['flower', '--broker=redis://redis:6379', '--port=5555']
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - celery-worker
    env_file:
      - ./.env
    volumes:
      - ./src:/app/src

  frontend-proxy:
    image: nginx:latest
    ports:
      - "8001:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./src/static:/app/src/static:ro
      - ./src/staticfiles:/app/src/staticfiles:ro
      - ./src/media:/app/src/media:ro
    depends_on:
      - django-web

volumes:
  postgres_data:
  redis_data: